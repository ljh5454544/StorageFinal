<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jia.storage.mapper.UsersMapper" >
  <resultMap id="BaseResultMap" type="com.jia.storage.entity.Users" >
    <constructor >
      <idArg column="id" jdbcType="BIGINT" javaType="java.lang.Long" />
      <arg column="username" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="PASSWORD" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="birth" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="telephone" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="remark" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="role_id" jdbcType="BIGINT" javaType="java.lang.Long" />
      <arg column="email" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="name" jdbcType="VARCHAR" javaType="java.lang.String" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    users.id, users.username, users.PASSWORD, users.birth, users.telephone, users.remark, users.role_id, users.email
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />, name
    from users, roles
    where users.id = #{id,jdbcType=BIGINT} and users.role_id = roles.id
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from users
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.jia.storage.entity.Users" >
    insert into users (id, username, PASSWORD, 
      birth, telephone, remark, 
      role_id, email)
    values (#{id,jdbcType=BIGINT}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{birth,jdbcType=TIMESTAMP}, #{telephone,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, 
      #{roleId,jdbcType=BIGINT}), #{email,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.jia.storage.entity.Users" >
    insert into users
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="password != null" >
        PASSWORD,
      </if>
      <if test="birth != null" >
        birth,
      </if>
      <if test="telephone != null" >
        telephone,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="roleId != null" >
        role_id,
      </if>
      <if test="email != null" >
        email,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="birth != null" >
        #{birth,jdbcType=TIMESTAMP},
      </if>
      <if test="telephone != null" >
        #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null" >
        #{roleId,jdbcType=BIGINT},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.jia.storage.entity.Users" >
    update users
    <set >
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        PASSWORD = #{password,jdbcType=VARCHAR},
      </if>
      <if test="birth != null" >
        birth = #{birth,jdbcType=TIMESTAMP},
      </if>
      <if test="telephone != null" >
        telephone = #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null" >
        role_id = #{roleId,jdbcType=BIGINT},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jia.storage.entity.Users" >
    update users
    set username = #{username,jdbcType=VARCHAR},
      PASSWORD = #{password,jdbcType=VARCHAR},
      birth = #{birth,jdbcType=TIMESTAMP},
      telephone = #{telephone,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      role_id = #{roleId,jdbcType=BIGINT},
      email = #{email,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>


  <!-- 自定义方法  -->
  <sql id="condition">
    <where>
      1 = 1
      <if test="id != null">
        and id = #{id,jdbcType=BIGINT}
      </if>
      <if test="username != null">
        and username = #{username,jdbcType=VARCHAR}
      </if>
      <if test="password != null">
        and password = #{password,jdbcType=VARCHAR}
      </if>
      <if test="birth != null">
        and birth = #{birth,jdbcType=TIMESTAMP}
      </if>
      <if test="telephone != null">
        and telephone = #{telephone,jdbcType=VARCHAR}
      </if>
      <if test="remark != null">
        and remark = #{remark,jdbcType=VARCHAR}
      </if>
      <if test="roleId != null">
        and role_id = #{roleId,jdbcType=BIGINT}
      </if>
      <if test="email != null">
        and email = #{email,jdbcType=BIGINT}
      </if>
    </where>
  </sql>

  <select id="selectByMap" parameterType="Map" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />, name
    from users, roles
    <include refid="condition"/>
    and users.role_id = roles.id
    <if test="startRow != null">
      limit #{startRow}, #{rowsPerPage}
    </if>
  </select>

  <select id="selectRowsNum" resultType="int">
    select count(id) from users
  </select>

</mapper>